names(df_resultados.z) <- sapply(names(df_resultados[c(6:12,19)]), function(x) paste(x,".z",sep=""))
df_resultados %<>% cbind(.,df_resultados.z)
names(df_resultados)
### Summary ###
# summary(df_resultados)
# str(df_resultados)
# head(df_resultados)
## rm
# ls()
rm(list=c("df_bateria","f_z","df_resultados.k045_030","df_resultados.z"))
df_resultados
df_resultados
l_md[[1]] <- glmer(cbind(GOF,100-GOF) ~ p.z * k.0.z * MN + (1|Site), family = "binomial",data=df_resultados,
control=glmerControl(optimizer="bobyqa",optCtrl=list(maxfun=100000)))
l_md[[2]] <- glmer(cbind(GOF,100-GOF) ~ p.z * k * MN + (1|Site), family = "binomial",data=df_resultados,
control=glmerControl(optimizer="bobyqa",optCtrl=list(maxfun=100000)))
l_md[[2]] <- glmer(cbind(GOF,100-GOF) ~ p.z * k * MN + (1|Site), family = "binomial",data=df_resultados,
control=glmerControl(optimizer="bobyqa",optCtrl=list(maxfun=100000)))
AICctab(l_md,weights=T)
library(gridExtra)
library(tidyverse)
library(magrittr)
library(plyr)
library(DHARMa) # resíduos quantilicos
library(lme4) # pacote de criação dos modelos estatísticos
library(bbmle)
AICctab(l_md,weights=T)
l_md <- vector("list",5)
names(l_md) <- c("k.z 1|Site","k.z MN|Site","k.z k.z*MN|Site","k.f 1|Site","k.f MN|Site")
l_md[[1]] <- glmer(cbind(GOF,100-GOF) ~ p.z * k.0.z * MN + (1|Site), family = "binomial",data=df_resultados,
control=glmerControl(optimizer="bobyqa",optCtrl=list(maxfun=100000)))
l_md[[2]] <- glmer(cbind(GOF,100-GOF) ~ p.z * k.0.z * MN + (MN|Site), family = "binomial",data=df_resultados,
control=glmerControl(optimizer="bobyqa",optCtrl=list(maxfun=100000)))
l_md[[3]] <- glmer(cbind(GOF,100-GOF) ~ p.z * k.0.z * MN + (k.0.z*MN|Site), family = "binomial",data=df_resultados,
control=glmerControl(optimizer="bobyqa",optCtrl=list(maxfun=100000)))
l_md[[4]] <- glmer(cbind(GOF,100-GOF) ~ p.z * k * MN + (1|Site), family = "binomial",data=df_resultados,
control=glmerControl(optimizer="bobyqa",optCtrl=list(maxfun=100000)))
l_md[[5]] <- glmer(cbind(GOF,100-GOF) ~ p.z * k * MN + (MN|Site), family = "binomial",data=df_resultados,
control=glmerControl(optimizer="bobyqa",optCtrl=list(maxfun=100000)))
AICctab(l_md,weights=T)
l_md.selecao <- vector("list",19)
names(l_md.selecao) <- c("p*k*MN",# modelo cheio
"p*k*MN-p:k:MN", #MC - 3a ordem
"p*(k+MN)","k*(p+MN)","MN*(p+k)", #2 interações
"p*k+MN","p*MN+k","k*MN+p", #1 interação + preditor
"p*k","p*MN","k*MN", #1 interação
"p+k+MN",#aditivo 3
"p+k","p+MN","k+MN", #aditivo 2
"p","k","MN", #preditor isolado
"1") #nulo
#modelo cheio
l_md.selecao[[1]] <- glmer(cbind(GOF,100-GOF) ~ p.z * k * MN + (MN|Site), family = "binomial",data=df_resultados,
control=glmerControl(optimizer="bobyqa",optCtrl=list(maxfun=100000)))
#modelo cheio - interação 3a ordem
l_md.selecao[[2]] <- glmer(cbind(GOF,100-GOF) ~ p.z * k * MN - p.z:k:MN + (MN|Site), family = "binomial",data=df_resultados,
control=glmerControl(optimizer="bobyqa",optCtrl=list(maxfun=100000)))
#2 interações
l_md.selecao[[3]] <- glmer(cbind(GOF,100-GOF) ~ p.z * (k + MN) + (MN|Site), family = "binomial",data=df_resultados,
control=glmerControl(optimizer="bobyqa",optCtrl=list(maxfun=100000)))
l_md.selecao[[4]] <- glmer(cbind(GOF,100-GOF) ~ k * (p.z + MN) + (MN|Site), family = "binomial",data=df_resultados,
control=glmerControl(optimizer="bobyqa",optCtrl=list(maxfun=100000)))
l_md.selecao[[5]] <- glmer(cbind(GOF,100-GOF) ~ MN * (p.z + k) + (MN|Site), family = "binomial",data=df_resultados,
control=glmerControl(optimizer="bobyqa",optCtrl=list(maxfun=100000)))
#1 interação + preditor
l_md.selecao[[6]] <- glmer(cbind(GOF,100-GOF) ~ p.z * k + MN + (MN|Site), family = "binomial",data=df_resultados,
control=glmerControl(optimizer="bobyqa",optCtrl=list(maxfun=100000)))
l_md.selecao[[7]] <- glmer(cbind(GOF,100-GOF) ~ p.z * MN + k + (MN|Site), family = "binomial",data=df_resultados,
control=glmerControl(optimizer="bobyqa",optCtrl=list(maxfun=100000)))
l_md.selecao[[8]] <- glmer(cbind(GOF,100-GOF) ~ k * MN + p.z + (MN|Site), family = "binomial",data=df_resultados,
control=glmerControl(optimizer="bobyqa",optCtrl=list(maxfun=100000)))
#1 interação
l_md.selecao[[9]] <- glmer(cbind(GOF,100-GOF) ~ p.z * k + (1|Site), family = "binomial",data=df_resultados,
control=glmerControl(optimizer="bobyqa",optCtrl=list(maxfun=100000)))
l_md.selecao[[10]] <- glmer(cbind(GOF,100-GOF) ~ p.z * MN + (MN|Site), family = "binomial",data=df_resultados,
control=glmerControl(optimizer="bobyqa",optCtrl=list(maxfun=100000)))
l_md.selecao[[11]] <- glmer(cbind(GOF,100-GOF) ~ k * MN + (MN|Site), family = "binomial",data=df_resultados,
control=glmerControl(optimizer="bobyqa",optCtrl=list(maxfun=100000)))
#aditivo 3
l_md.selecao[[12]] <- glmer(cbind(GOF,100-GOF) ~ p.z + k + MN + (MN|Site), family = "binomial",data=df_resultados,
control=glmerControl(optimizer="bobyqa",optCtrl=list(maxfun=100000)))
#aditivo 2
l_md.selecao[[13]] <- glmer(cbind(GOF,100-GOF) ~ p.z + k + (1|Site), family = "binomial",data=df_resultados,
control=glmerControl(optimizer="bobyqa",optCtrl=list(maxfun=100000)))
l_md.selecao[[14]] <- glmer(cbind(GOF,100-GOF) ~ p.z + MN + (MN|Site), family = "binomial",data=df_resultados,
control=glmerControl(optimizer="bobyqa",optCtrl=list(maxfun=100000)))
l_md.selecao[[15]] <- glmer(cbind(GOF,100-GOF) ~ k + MN + (MN|Site), family = "binomial",data=df_resultados,
control=glmerControl(optimizer="bobyqa",optCtrl=list(maxfun=100000)))
#aditivo 1
l_md.selecao[[16]] <- glmer(cbind(GOF,100-GOF) ~ p.z + (1|Site), family = "binomial",data=df_resultados,
control=glmerControl(optimizer="bobyqa",optCtrl=list(maxfun=100000)))
l_md.selecao[[17]] <- glmer(cbind(GOF,100-GOF) ~ k + (1|Site), family = "binomial",data=df_resultados,
control=glmerControl(optimizer="bobyqa",optCtrl=list(maxfun=100000)))
l_md.selecao[[18]] <- glmer(cbind(GOF,100-GOF) ~ MN + (MN|Site), family = "binomial",data=df_resultados,
control=glmerControl(optimizer="bobyqa",optCtrl=list(maxfun=100000)))
# nulo
l_md.selecao[[19]] <- glmer(cbind(GOF,100-GOF) ~ 1 + (1|Site), family = "binomial",data=df_resultados,
control=glmerControl(optimizer="bobyqa",optCtrl=list(maxfun=100000)))
AICctab(l_md.selecao,weights=T)
library(gridExtra)
library(tidyverse)
library(magrittr)
library(plyr)
library(DHARMa) # resíduos quantilicos
library(lme4) # pacote de criação dos modelos estatísticos
library(bbmle)
### leitura ###
df_resultados <- readr::read_csv("/home/danilo/Documentos/Doutorado/artigo_mestrado/Rmd_e_dados/df_resultados.csv")
# df_resultados %>% str
### padronização ###
names(df_resultados)[1] <- "Site"
# para o resultada das simulações de k[0.45;0.30]
df_resultados.k045_030 <- filter(df_resultados,k=="0.99") %>% dplyr::select(-k) %>% unique
df_resultados.k045_030[,"GOF"] <- NA
df_bateria <- data_frame(Site=gl(80,4*2,labels=unique(df_resultados.k045_030$Site)),
k=gl(4,80*2,labels = seq(0.45,0.30,-0.05)),
MN=gl(2,4*80,labels = c("EE","EI")) )
df_resultados.k045_030 %<>% left_join(x=df_bateria,y=.,by = c("Site","MN"))
# dim(df_resultados) == dim(df_resultados.k045_030)
df_resultados %<>% rbind(.,df_resultados.k045_030)
## fatores
df_resultados$Site <- factor(df_resultados$Site)
df_resultados$k <- factor(df_resultados$k,levels=unique(df_resultados$k))
df_resultados$k.0 = as.numeric(as.character(df_resultados$k))
df_resultados$MN <- factor(df_resultados$MN,levels = c("EE","EI"))
# df_resultados$k %>% contrasts()
# df_resultados$MN %>% contrasts()
### z score ###
f_z <- function(x){
m <- base::mean(x,na.rm=TRUE)
sd <- sd(x,na.rm=TRUE)
output <- (x-m)/sd
return(output)
}
# names(df_resultados)
df_resultados.z <- as.data.frame(apply(df_resultados[c(6:12,19)],2,f_z))
names(df_resultados.z) <- sapply(names(df_resultados[c(6:12,19)]), function(x) paste(x,".z",sep=""))
df_resultados %<>% cbind(.,df_resultados.z)
### Summary ###
# summary(df_resultados)
# str(df_resultados)
# head(df_resultados)
## rm
# ls()
rm(list=c("df_bateria","f_z","df_resultados.k045_030","df_resultados.z"))
df_plot <- df_resultados %>% dplyr::filter(k=="0.99" & MN=="EE") %>% dplyr::select(Site, p, S,p.z,S.z) %>% unique
# avaliando as curvas pelo quantiles
# df_plot %<>% mutate(terceiro_quantil = ifelse(p>quantile(df_plot$p,probs=0.75),">_3oQ","<_3oQ"))
l_p <- vector("list",6)
l_p[[1]] <- ggplot(df_plot, aes(x=p)) +
geom_histogram(bins=30) +
geom_vline(xintercept = c(quantile(df_plot$p,probs = c(0.25,0.50,0.75))),color="red")
# geom_density()
l_p[[2]] <- ggplot(df_plot, aes(x=p.z)) +
geom_histogram(bins=30) +
geom_vline(xintercept = c(quantile(df_plot$p.z,probs = c(0.25,0.50,0.75))),color="red")
# geom_density()
l_p[[3]] <- ggplot(df_plot, aes(x=S)) +
geom_histogram(bins=30) +
geom_vline(xintercept = quantile(df_plot$S,probs = c(0.25,0.50,0.75)),color="red")
l_p[[4]] <- ggplot(df_plot, aes(x=S.z)) +
geom_histogram(bins=30) +
geom_vline(xintercept = c(quantile(df_plot$S.z,probs = c(0.25,0.50,0.75))),color="red")
l_p[[5]] <- ggplot(df_plot, aes(x=p,y=S)) +
geom_hline(yintercept = quantile(df_plot$S,probs = c(0.25,0.50,0.75)),color="red") +
geom_vline(xintercept = quantile(df_plot$p,probs = c(0.25,0.50,0.75)),color="red") +
geom_point() +
geom_smooth(method="lm")
l_p[[6]] <- ggplot(df_plot, aes(x=p.z,y=S.z)) +
geom_hline(yintercept = quantile(df_plot$S.z,probs = c(0.25,0.50,0.75)),color="red") +
geom_vline(xintercept = quantile(df_plot$p.z,probs = c(0.25,0.50,0.75)),color="red") +
geom_point() +
geom_smooth(method="lm")
# do.call("grid.arrange",c(l_p,ncol=3))
grid.arrange(l_p[[1]],l_p[[2]],l_p[[3]],l_p[[4]],l_p[[5]],l_p[[6]],
layout_matrix = rbind(c(1,1,3,3,5,5),
c(2,2,4,4,6,6) )
)
ls()
AICctab(l_md.selecao,weights=T) %>% head
AICctab(l_md.selecao,weights=T)
l_md.selecao["p*k*MN"]
plot(simulateResiduals(l_md.selecao["p*k*MN"],1000))
teste <- simulateResiduals(l_md.selecao["p*k*MN"],1000)
teste <- simulateResiduals(l_md.selecao[["p*k*MN"]],1000)
teste
plot(simulateResiduals(l_md.selecao[["p*k*MN"]],1000))
knitr::opts_chunk$set(echo = FALSE, tidy = TRUE, include = TRUE, warning = FALSE,cache = TRUE)
plot(simulateResiduals(l_md.selecao[["p*k*MN"]],1000))
l_md.selecao[["p*k*MN"]]
library(doMC)
library(GUILDS)
library(magrittr)
library(tidyverse)
library(plyr)
library(magrittr)
library(tidyverse)
library(plyr)
df_to.merg1 <- read.csv(file="/home/danilo/Área de Trabalho/treeco-em_andamento/to_merge1.csv",as.is = TRUE)
df_to.merg2 <- read.csv(file="/home/danilo/Área de Trabalho/treeco-em_andamento/to_merge2.csv",as.is = TRUE)
df_to.merg1 %>% head
df_to.merge_abundance <- read.csv(file="/home/danilo/Área de Trabalho/treeco-em_andamento/to_merge1.csv",as.is = TRUE)
df_to.merge_traits <- read.csv(file="/home/danilo/Área de Trabalho/treeco-em_andamento/to_merge2.csv",as.is = TRUE)
df_to.merge_traits %>% head
df_to.write <- left_join(x=df_to.merge_traits,y=df_to.merge_abundance,by=c("species.original","locality1"))
df_to.write %>% head
df_to.merge_traits %>% dim
df_to.write %>% dim
write.csv(df_to.write,file="/home/danilo/Área de Trabalho/treeco-em_andamento/df_resultado_merge.csv",row.names = FALSE)
library(doMC)
library(GUILDS)
library(lme4)
library(merTools)
library(magrittr)
library(tidyverse)
library(plyr)
setwd("/home/danilo/Documentos/Doutorado/artigo_mestrado/simulacao/")
source("dinamica_coalescente_beta.R")
df_SAD.obs <- read.csv(file = "/home/danilo/Documentos/Doutorado/artigo_mestrado/simulacao/SAD_observada/abundances.csv")
df_SAD.obs %<>% filter(N!=0 & species.correct != "Mortas") %>% group_by(SiteCode) %>% nest
df_SAD.obs
df_SAD.obs <- read.csv(file = "/home/danilo/Documentos/Doutorado/artigo_mestrado/simulacao/SAD_observada/abundances.csv")
df_SAD.obs %<>% filter(N!=0 & species.correct != "Mortas" & SiteCode %in% unique(df_resultados$SiteCode)) %>% group_by(SiteCode) %>% nest
df_resultados <- map_df(Sys.glob("./U/*.csv"),read.csv)
df_resultados %<>% ddply(names(.)[-13],summarise,U_med=mean(U),U_var=var(U))
df_resultados$txt.file %<>% as.character()
df_resultados %<>% mutate(file.tag=gsub(".txt","",txt.file))
df_SAD.obs %<>% filter(N!=0 & species.correct != "Mortas" & SiteCode %in% unique(df_resultados$SiteCode)) %>% group_by(SiteCode) %>% nest
names(df_SAD.obs)[2] <- "SAD.obs"
df_SAD.obs
ls()
df_resultados <- map_df(Sys.glob("./U/*.csv"),read.csv)
df_resultados %<>% ddply(names(.)[-13],summarise,U_med=mean(U),U_var=var(U))
df_resultados$txt.file %<>% as.character()
df_resultados %<>% mutate(file.tag=gsub(".txt","",txt.file))
df_SAD.obs <- read.csv(file = "/home/danilo/Documentos/Doutorado/artigo_mestrado/simulacao/SAD_observada/abundances.csv")
df_simulacao <- map_df(Sys.glob("./U/*.csv"),read.csv)
df_simulacao %<>% ddply(names(.)[-13],summarise,U_med=mean(U),U_var=var(U))
df_simulacao$txt.file %<>% as.character()
df_simulacao %<>% mutate(L_plot = 100/sqrt(J/DA),
m = d * ( 1 - exp(-L_plot/d) ) / L_plot,
m_ = m * p / (1 - (1-p) * m),
I = m_ * (J-1)/(1-m_),
J_M=p*DA*2500,
theta=(U_med*(J_M-1))/(1-U_med))
df_simulacao %<>% mutate(k_prop=k) %>%  group_by(SiteCode,k_prop) %>% nest
registerDoMC(2)
df_simulacao$SADs <- llply(df_simulacao[["data"]],function(X) replicate(100,generate.ESF(theta = X$theta, I = X$I, J = X$J)),.parallel = TRUE)
df_resultados <- map_df(Sys.glob("./U/*.csv"),read.csv)
df_resultados %<>% ddply(names(.)[-13],summarise,U_med=mean(U),U_var=var(U))
df_resultados$txt.file %<>% as.character()
df_resultados %<>% mutate(file.tag=gsub(".txt","",txt.file))
df_SAD.obs <- read.csv(file = "/home/danilo/Documentos/Doutorado/artigo_mestrado/simulacao/SAD_observada/abundances.csv")
df_SAD.obs %<>% filter(N!=0 & species.correct != "Mortas" & SiteCode %in% unique(df_resultados$SiteCode)) %>% group_by(SiteCode) %>% nest
names(df_SAD.obs)[2] <- "SAD.obs"
df_SAD.obs <- read.csv(file = "/home/danilo/Documentos/Doutorado/artigo_mestrado/simulacao/SAD_observada/abundances.csv")
df_SAD.obs %<>% filter(N!=0 & species.correct != "Mortas" & SiteCode %in% unique(df_resultados$SiteCode))
write.csv(df_SAD.obs,file = "/home/danilo/Documentos/Doutorado/artigo_mestrado/simulacao/SAD_observada/abundances.csv",row.names = FALSE)
df_SAD.obs %<>% group_by(SiteCode) %>% nest
df_SAD.obs %>% dim
df_SAD.obs
df_SAD.obs <- read.csv(file = "/home/danilo/Documentos/Doutorado/artigo_mestrado/simulacao/SAD_observada/abundances.csv")
df_SAD.obs %<>% group_by(SiteCode) %>% nest
df_SAD.obs
names(df_SAD.obs)[2] <- "SAD.obs"
df_SAD.predita <- data.frame(SAD_MN.name=as.character(Sys.glob("./SADs_preditas/*.csv")))
find.string <- paste(c("./SADs_preditas/",".csv"),collapse = "|")
df_SAD.predita %<>% mutate(SAD_obs.name=gsub("__k","__SAD.txt",str_match(SAD_MN.name,"ref(.*?)__k")[,1]),
MN=str_match(SAD_MN.name,"EE|EI")[,1],
k=str_match(SAD_MN.name,"__k(.*?).E")[,2],
file.tag=gsub("__k","",str_match(SAD_MN.name,"ref(.*?)__k")[,1]),
rep=str_match(SAD_MN.name,"rep_(.*?).csv")[,2])
df_SAD.predita$SAD_MN.name %<>% as.character()
df_SAD.predita %<>% left_join(x=.,y=unique(df_resultados[,c("file.tag","SiteCode")]),by="file.tag") %>%
group_by(SiteCode) %>% nest
df_SAD.predita %<>% left_join(x=.,y=df_SAD.obs,by="SiteCode")
df_SAD.predita
f_resultados <- function(X){
# df_referencia <- df_SAD.predita[1,]$data %>% as.data.frame()
# v_SAD.obs <- df_SAD.predita[1,]$SAD.obs %>% as.data.frame() %>% .$N
df_referencia <- X$data %>% as.data.frame()
v_SAD.obs <- X$SAD.obs %>% as.data.frame() %>% .$N
f_KSeS <- function(OBS = v_SAD.obs,df_predicao){
# df_predicao <- df_referencia[1,]
v_SAD.predita <- read.csv(file = df_predicao[,"SAD_MN.name"]) %>% .$x
# teste de Kolmogoro-Smirnov #
a <- suppressWarnings(ks.test(x = OBS,
y = v_SAD.predita))
a <- data.frame(KS.D = a$statistic, KS.p = a$p.value)
a$S_SAD.predita <- length(v_SAD.predita)
a$S_SAD.obs <- length(v_SAD.obs)
return(a)
}
# teste de KS e armazenamento #
df_resultados <- adply(df_referencia,1,function(X) f_KSeS(df_predicao = X))
return(df_resultados)
}
registerDoMC(n_cores)
n_cores <- 3
registerDoMC(n_cores)
df_SAD.predita %<>% ddply(.,"SiteCode",f_resultados,.parallel = TRUE)
write.csv(df_SAD.predita,file="./resultados/df_replicas.csv",row.names = F)
df_SAD.predita %<>% ddply(.,c("SiteCode","MN","k"),summarise,
GOF=length(KS.p>=0.05),
p.value_mean=mean(KS.p),p.value_var=var(KS.p),
S_mean=mean(S_SAD.predita),S_var=var(S_SAD.predita),S.obs_mean=mean(S_SAD.obs))
df_resultados$k %<>% as.character()
df_SAD.predita %<>% left_join(x=.,y=df_resultados[,c(1:6,11,13:14)],by=c("SiteCode","k"))
write.csv(df_SAD.predita,file="./resultados/df_resultados.csv",row.names = F)
df_resultados <- read.csv(file="./resultados/df_resultados.csv")
f_z <- function(x){
m <- base::mean(x,na.rm=TRUE)
sd <- sd(x,na.rm=TRUE)
output <- (x-m)/sd
return(output)
}
df_resultados %<>% mutate(p.z = f_z(p),S.z = f_z(S))
names(df_resultados)[1] <- "Site"
x11()
df_resultados %>% ggplot(aes(x=S,y=S.obs_mean)) + geom_point()
df_resultados %>% ggplot(aes(x=S,y=S.obs_mean)) + geom_point()
df_resultados %>% mutate(S.obs = S.obs_mean) %>%  ggplot(aes(x=S,y=S.obs)) + geom_point() + geom_abline(intercept = 0,slope=1,color="red")
df_resultados %>% head
df_auditoria <- df_resultados %>% mutate(sitecode_difS=S-S.obs_mean) %>% filter(sitecode_difS>0) %>% select(Site,S,S.obs_mean)
df_auditoria
df_resultados %>% mutate(sitecode_difS=S-S.obs_mean)
df_auditoria <- df_resultados %>% mutate(sitecode_difS=S.obs_mean-S) %>% filter(sitecode_difS>0) %>% select(Site,S,S.obs_mean)
df_auditoria
df_auditoria <- df_resultados %>% mutate(sitecode_difS=S.obs_mean-S) %>% filter(sitecode_difS>0) %>% select(Site,S,S.obs_mean) %>% unique
df_auditoria
df_auditoria %>% head
write.csv(df_auditoria,file="./resultados/df_auditoria.csv",row.names = FALSE)
ls()
df_resultados %>% mutate(S.obs = S.obs_mean) %>%
ggplot(aes(x=S,y=S.obs)) +
geom_point() +
geom_abline(intercept = 0,slope=1,color="red") +
labs(x="S planilha references on line",
y="S vetor de abundância utilizado no teste KS")
df_resultados %>% mutate(S.obs = S.obs_mean) %>%
ggplot(aes(x=S,y=S.obs)) +
geom_point() +
geom_abline(intercept = 0,slope=1,color="red") +
labs(x="S planilha references on line",
y="S vetor utilizado em KS")
df_referencia %>% head
df_resultados%>% head
df_resultados %>% summary
df_resultados.replicas <- read.csv("./resultados/df_replicas.csv")
df_resultados.replicas %>% dim
df_resultados.replicas %>% head
length(df_resultados.replicas$KS.p>=0.05) %>% table
df_resultados.replicas$KS.p>=0.05 %>% table
df_resultados.replicas$KS.p>=0.05
df_resultados.replicas$KS.p>=0.05 %>% table
table(df_resultados.replicas$KS.p>=0.05)
df_SAD.predita %<>% ddply(.,c("SiteCode","MN","k"),summarise,
GOF=sum(KS.p>=0.05),
p.value_mean=mean(KS.p),p.value_var=var(KS.p),
S_mean=mean(S_SAD.predita),S_var=var(S_SAD.predita),S.obs=mean(S_SAD.obs))
df_resultados.replicas %<>% ddply(.,c("SiteCode","MN","k"),summarise,
GOF=sum(KS.p>=0.05),
p.value_mean=mean(KS.p),p.value_var=var(KS.p),
S_mean=mean(S_SAD.predita),S_var=var(S_SAD.predita),S.obs=mean(S_SAD.obs))
df_resultados.replicas %>% summarise
length(df_resultados.replicas$KS.p>=0.05)
table(df_resultados.replicas$KS.p>=0.05)[1]
table(df_resultados.replicas$KS.p>=0.05)
df_resultados.replicas %>% head
df_resultados.replicas <- read.csv("./resultados/df_replicas.csv")
df_resultados.replicas %<>% ddply(.,c("SiteCode","MN","k"),summarise,
GOF=sum(KS.p>=0.05),
p.value_mean=mean(KS.p),p.value_var=var(KS.p),
S_mean=mean(S_SAD.predita),S_var=var(S_SAD.predita),S.obs=mean(S_SAD.obs))
df_resultados.replicas %>% head
df_SAD.predita <- read.csv("./resultados/df_replicas.csv")
df_SAD.predita %>% head
df_SAD.predita %>% ddply("SiteCode",summarise,S_SAD.obs_var=var(S_SAD.obs))
df_SAD.predita %>% ddply("SiteCode",summarise,S_SAD.obs_var=var(S_SAD.obs)) %>% summary
df_SAD.predita %>% head
df_SAD.predita %<>% ddply(.,c("SiteCode","MN","k","S_SAD.obs"),summarise,
GOF=sum(KS.p>=0.05),
p.value_mean=mean(KS.p),p.value_var=var(KS.p),
S_mean=mean(S_SAD.predita),S_var=var(S_SAD.predita),
S.obs_SAD=mean(S_SAD.obs))
df_resultados$k %<>% as.character()
df_SAD.predita %<>% left_join(x=.,y=df_resultados[,c(1:6,11,13:14)],by=c("SiteCode","k"))
df_SAD.predita <- read.csv("./resultados/df_replicas.csv")
df_SAD.predita %<>% ddply(.,c("SiteCode","MN","k","S_SAD.obs"),summarise,
GOF=sum(KS.p>=0.05),
p.value_mean=mean(KS.p),p.value_var=var(KS.p),
S_mean=mean(S_SAD.predita),S_var=var(S_SAD.predita),
S.obs_SAD=mean(S_SAD.obs))
df_SAD.predita %>% head
df_resultados %>% head
df_resultados <- map_df(Sys.glob("./U/*.csv"),read.csv)
df_resultados %<>% ddply(names(.)[-13],summarise,U_med=mean(U),U_var=var(U))
df_resultados$txt.file %<>% as.character()
df_resultados %<>% mutate(file.tag=gsub(".txt","",txt.file))
df_resultados$k %<>% as.character()
df_SAD.predita %<>% left_join(x=.,y=df_resultados[,c(1:6,11,13:14)],by=c("SiteCode","k"))
df_SAD.predita %>% str
df_resultados <- map_df(Sys.glob("./U/*.csv"),read.csv)
df_resultados %<>% ddply(names(.)[-13],summarise,U_med=mean(U),U_var=var(U))
df_resultados$txt.file %<>% as.character()
df_resultados %<>% mutate(file.tag=gsub(".txt","",txt.file))
df_resultados %>% str
df_SAD.predita <- read.csv("./resultados/df_replicas.csv")
df_SAD.predita %<>% ddply(.,c("SiteCode","MN","k","S_SAD.obs"),summarise,
GOF=sum(KS.p>=0.05),
p.value_mean=mean(KS.p),p.value_var=var(KS.p),
S_mean=mean(S_SAD.predita),S_var=var(S_SAD.predita),
S.obs_SAD=mean(S_SAD.obs))
df_SAD.predita %>% str
df_SAD.predita %<>% left_join(x=.,y=df_resultados[,c(1:6,11,13:14)],by=c("SiteCode","k"))
write.csv(df_SAD.predita,file="./resultados/df_resultados.csv",row.names = F)
rm(list=ls())
df_resultados <- read.csv(file="./resultados/df_resultados.csv")
f_z <- function(x){
m <- base::mean(x,na.rm=TRUE)
sd <- sd(x,na.rm=TRUE)
output <- (x-m)/sd
return(output)
}
df_resultados %<>% mutate(p.z = f_z(p),S.z = f_z(S))
names(df_resultados)[1] <- "Site"
df_resultados %>% mutate(S.obs = S.obs_mean) %>%
ggplot(aes(x=S,y=S.obs)) +
geom_point() +
geom_abline(intercept = 0,slope=1,color="red") +
labs(x="S planilha references on line",
y="S vetor utilizado em KS")
names(df_resultados)
df_SAD.predita <- read.csv("./resultados/df_replicas.csv")
df_SAD.predita %<>% ddply(.,c("SiteCode","MN","k","S_SAD.obs"),summarise,
GOF=sum(KS.p>=0.05),
p.value_mean=mean(KS.p),p.value_var=var(KS.p),
S_mean=mean(S_SAD.predita),S_var=var(S_SAD.predita))
df_SAD.predita %<>% left_join(x=.,y=df_resultados[,c(1:6,11,13:14)],by=c("SiteCode","k"))
rm(list=ls())
df_resultados <- map_df(Sys.glob("./U/*.csv"),read.csv)
df_resultados %<>% ddply(names(.)[-13],summarise,U_med=mean(U),U_var=var(U))
df_resultados$txt.file %<>% as.character()
df_resultados %<>% mutate(file.tag=gsub(".txt","",txt.file))
df_SAD.obs <- read.csv(file = "/home/danilo/Documentos/Doutorado/artigo_mestrado/simulacao/SAD_observada/abundances.csv")
df_SAD.obs %<>% group_by(SiteCode) %>% nest
names(df_SAD.obs)[2] <- "SAD.obs"
df_SAD.predita <- data.frame(SAD_MN.name=as.character(Sys.glob("./SADs_preditas/*.csv")))
find.string <- paste(c("./SADs_preditas/",".csv"),collapse = "|")
df_SAD.predita <- read.csv("./resultados/df_replicas.csv")
df_SAD.predita %<>% ddply(.,c("SiteCode","MN","k","S_SAD.obs"),summarise,
GOF=sum(KS.p>=0.05),
p.value_mean=mean(KS.p),p.value_var=var(KS.p),
S_mean=mean(S_SAD.predita),S_var=var(S_SAD.predita))
df_SAD.predita %<>% left_join(x=.,y=df_resultados[,c(1:6,11,13:14)],by=c("SiteCode","k"))
df_SAD.predita %>% head
write.csv(df_SAD.predita,file="./resultados/df_resultados.csv",row.names = F)
df_resultados <- read.csv(file="./resultados/df_resultados.csv")
f_z <- function(x){
m <- base::mean(x,na.rm=TRUE)
sd <- sd(x,na.rm=TRUE)
output <- (x-m)/sd
return(output)
}
df_resultados %<>% mutate(p.z = f_z(p),S.z = f_z(S))
names(df_resultados)[1] <- "Site"
df_resultados %>% head
df_resultados %>%
ggplot(aes(x=S,y=S_SAD.obs)) +
geom_point() +
geom_abline(intercept = 0,slope=1,color="red") +
labs(x="S planilha references on line",
y="S vetor utilizado em KS")
df_resultados%>% head
df_resultados %>%
ggplot(aes(x=p.value_mean,y=GOF)) +
geom_point() +
facet_wrap(~k,ncol = 3)
df_resultados %>%
ggplot(aes(x=p.value_mean,y=GOF)) +
geom_point() +
facet_wrap(MN~k,ncol = 3)
df_SAD.predita <- read.csv("./resultados/df_replicas.csv")
df_SAD.predita %>% head
df_SAD.predita %>% ggplot(aes(x=KS.D,y=KS.p)) +
geom_point() +
facet_wrap(MN~k,ncol=3)
df_SAD.predita %>% ggplot(aes(x=S_SAD.obs,y=KS.p)) +
geom_point() +
facet_wrap(MN~k,ncol=3)
df_SAD.predita %>% ggplot(aes(x=S_SAD.predita,y=KS.p)) +
geom_point() +
facet_wrap(MN~k,ncol=3)
df_SAD.predita %>% ggplot(aes(x=S_SAD.predita,y=KS.p)) +
geom_point() +
facet_wrap(MN~k,ncol=3,scales = "free")
df_SAD.predita %>% ggplot(aes(x=KS.D,y=KS.p)) +
geom_point() +
facet_wrap(MN~k,ncol=3,scales = "free")
df_SAD.predita %>% ggplot(aes(x=S_SAD.obs,y=KS.p)) +
geom_point() +
facet_wrap(MN~k,ncol=3,scales = "free")
df_SAD.predita %>% ggplot(aes(x=S_SAD.predita,y=KS.p)) +
geom_point() +
facet_wrap(MN~k,ncol=3,scales = "free")
knitr::opts_chunk$set(echo = FALSE, tidy = TRUE, include = TRUE, warning = FALSE,cache = TRUE)
library(gridExtra)
library(tidyverse)
library(magrittr)
library(plyr)
library(DHARMa) # resíduos quantilicos
library(lme4) # pacote de criação dos modelos estatísticos
library(bbmle)
